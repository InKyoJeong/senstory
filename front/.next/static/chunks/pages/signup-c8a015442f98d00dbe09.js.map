{"version":3,"file":"static/chunks/pages/signup-c8a015442f98d00dbe09.js","mappings":"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","sources":["webpack://_N_E/./components/common/Loader/styles.ts","webpack://_N_E/./components/common/Loader/index.tsx","webpack://_N_E/./components/common/MiniTitle/styles.ts","webpack://_N_E/./components/common/MiniTitle/index.tsx","webpack://_N_E/./components/user/FormButton/styles.ts","webpack://_N_E/./components/user/FormButton/index.tsx","webpack://_N_E/./components/user/SignUpForm/styles.ts","webpack://_N_E/./components/user/SignUpForm/index.tsx","webpack://_N_E/./components/user/SignUpFinish/styles.ts","webpack://_N_E/./components/user/SignUpFinish/index.tsx","webpack://_N_E/./pages/signup.tsx","webpack://_N_E/?e272"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoaderWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  background-color: ${({ theme }) => theme.color.DARK_GRAY};\n`;\n\nexport const LoaderFull = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: calc(100vh - 40px);\n  color: white;\n`;\n\nexport const LoaderContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 15px;\n\n  & div {\n    padding-bottom: 15px;\n  }\n`;\n","import React from 'react';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { LoaderFull, LoaderWrapper, LoaderContent } from './styles';\n\ninterface LoaderProps {\n  text: string;\n}\n\nconst Loader = ({ text }: LoaderProps) => {\n  return (\n    <LoaderWrapper>\n      <LoaderFull>\n        <LoaderContent>\n          <div>{text}</div>\n          <LoadingOutlined />\n        </LoaderContent>\n      </LoaderFull>\n    </LoaderWrapper>\n  );\n};\n\nexport default Loader;\n","import styled, { css } from \"styled-components\";\n\nconst subTitle = css`\n  font-weight: bolder;\n  font-size: 18px;\n`;\n\nexport const PageTitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 40px;\n`;\n\nexport const TextFront = styled.i`\n  ${subTitle}\n  color: ${({ theme }) => theme.color.MAIN};\n  margin: 0px 3px;\n`;\n\nexport const TextBack = styled.i`\n  ${subTitle}\n  color: ${({ theme }) => theme.color.LIGHT_GRAY};\n`;\n","import React from 'react';\nimport { PageTitleWrapper, TextBack, TextFront } from './styles';\n\ninterface MiniTitleProps {\n  title1: string;\n  title2: string;\n}\n\nconst MiniTitle = ({ title1, title2 }: MiniTitleProps) => {\n  return (\n    <>\n      <PageTitleWrapper>\n        <TextFront>{title1}</TextFront>\n        <TextBack>{title2}</TextBack>\n      </PageTitleWrapper>\n    </>\n  );\n};\n\nexport default MiniTitle;\n","import styled from 'styled-components';\nimport { Form, Button, Input } from 'antd';\n\nexport const ButtonWrapper = styled.div`\n  margin-top: 20px;\n`;\n\nexport const FormBtn = styled(Button)`\n  width: 100%;\n  height: 40px;\n  border-radius: 10px;\n  margin-top: 5px;\n`;\n","import React from 'react';\nimport { ButtonWrapper, FormBtn } from './styles';\n\ninterface FormBtnProps {\n  loading: boolean;\n  buttonText: string;\n}\n\nconst FormButton = ({ loading, buttonText }: FormBtnProps) => {\n  return (\n    <ButtonWrapper>\n      <FormBtn type=\"primary\" htmlType=\"submit\" loading={loading}>\n        {buttonText}\n      </FormBtn>\n    </ButtonWrapper>\n  );\n};\n\nexport default FormButton;\n","import styled from 'styled-components';\nimport { Input, Form } from 'antd';\n\nexport const SignUpFormWrapper = styled(Form)`\n  margin: 0px 20px;\n`;\n\nexport const ErrorMessage = styled.div`\n  color: #d43578;\n`;\n\nexport const InputWrapper = styled.div`\n  margin-top: 30px;\n\n  & label {\n    color: white;\n  }\n`;\n\nexport const SignUpInput = styled(Input)<any>`\n  font-size: 16px;\n  border-radius: 10px;\n  margin-top: 5px;\n  color: white;\n  border-color: ${({ theme }) => theme.color.LIGHT_GRAY};\n  background-color: ${({ theme }) => theme.color.MIDDLE_GRAY};\n`;\n","import React, { useCallback, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../../../hooks/useInput';\nimport Conditional from '../../../hocs/Conditional';\nimport MiniTitle from '../../common/MiniTitle';\nimport { signupRequest } from '../../../reducers/user/signup';\nimport { RootState } from '../../../reducers';\nimport { ErrorMessage, SignUpInput, InputWrapper, SignUpFormWrapper } from './styles';\nimport FormButton from '../FormButton';\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const { signUpLoading, signUpError } = useSelector((state: RootState) => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [passwordCheck, setPasswordCheck] = useState<string>('');\n  const [passwordError, setPasswordError] = useState<boolean>(false);\n  const [isValid, setIsValid] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  useEffect(() => {\n    setIsValid(\n      email.length != 0 && password.length != 0 && passwordCheck.length != 0 && nickname.length != 0 && !passwordError,\n    );\n  }, [email, password, passwordCheck, nickname]);\n\n  const onChangePasswordCheck = useCallback(\n    (e) => {\n      setPasswordCheck(e.target.value);\n      setPasswordError(e.target.value !== password);\n    },\n    [password],\n  );\n\n  const onSubmit = useCallback(() => {\n    if (!isValid) return;\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    dispatch(signupRequest({ email, password, nickname }));\n  }, [email, password, passwordCheck, isValid]);\n\n  return (\n    <SignUpFormWrapper onFinish={onSubmit}>\n      <MiniTitle title1=\"Sign\" title2=\"Up\" />\n\n      <InputWrapper>\n        <label htmlFor=\"user-email\">이메일</label>\n        <br />\n        <SignUpInput\n          name=\"user-email\"\n          type=\"email\"\n          value={email}\n          onChange={onChangeEmail}\n          required\n          autoComplete=\"off\"\n        />\n      </InputWrapper>\n      <InputWrapper>\n        <label htmlFor=\"user-nick\">닉네임</label>\n        <br />\n        <SignUpInput name=\"user-nick\" value={nickname} onChange={onChangeNickname} required autoComplete=\"off\" />\n      </InputWrapper>\n      <InputWrapper>\n        <label htmlFor=\"user-password\">비밀번호</label>\n        <br />\n        <SignUpInput name=\"user-password\" type=\"password\" value={password} onChange={onChangePassword} required />\n      </InputWrapper>\n      <InputWrapper>\n        <label htmlFor=\"user-password-check\">비밀번호 확인</label>\n        <br />\n        <SignUpInput\n          name=\"user-password\"\n          type=\"password\"\n          value={passwordCheck}\n          onChange={onChangePasswordCheck}\n          required\n        />\n        <Conditional condition={passwordError}>\n          <ErrorMessage>비밀번호가 일치하지 않습니다.</ErrorMessage>\n        </Conditional>\n      </InputWrapper>\n\n      <FormButton buttonText=\"가입하기\" loading={signUpLoading} />\n    </SignUpFormWrapper>\n  );\n};\n\nexport default SignUpForm;\n","import styled from \"styled-components\";\n\nexport const FinishWrapper = styled.div`\n  height: 100vh;\n  background-color: ${({ theme }) => theme.color.DARK_GRAY};\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  & div {\n    font-size: 15px;\n    color: white;\n    margin-bottom: 10px;\n  }\n\n  & Button {\n    background-color: ${({ theme }) => theme.color.MAIN};\n    border-radius: 10px;\n    border: none;\n  }\n`;\n","import React, { useCallback } from \"react\";\nimport { Button } from \"antd\";\nimport Router from \"next/router\";\nimport { FinishWrapper } from \"./styles\";\n\nconst SignUpFinish = () => {\n  const handleLoginPage = useCallback(() => {\n    Router.replace(\"/login\");\n  }, []);\n\n  return (\n    <FinishWrapper>\n      <div>회원가입이 완료되었습니다.</div>\n      <Button onClick={handleLoginPage}>로그인하기</Button>\n    </FinishWrapper>\n  );\n};\n\nexport default SignUpFinish;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { loadMeRequest } from '../reducers/user/loadMe';\nimport { RootState } from '../reducers';\nimport { GetServerSideProps } from 'next';\n\nimport Layout from '../components/common/Layout';\nimport Loader from '../components/common/Loader';\nimport SignUpForm from '../components/user/SignUpForm';\nimport SignUpFinish from '../components/user/SignUpFinish';\n\nconst Signup = () => {\n  const { signUpLoading, signUpFinish } = useSelector((state: RootState) => state.user);\n\n  if (signUpFinish) {\n    return <SignUpFinish />;\n  }\n\n  if (signUpLoading) {\n    return <Loader text=\"회원가입 중...\" />;\n  }\n\n  return (\n    <Layout>\n      <Head>\n        <title>회원가입 | SenStory</title>\n      </Head>\n\n      <SignUpForm />\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  (store): any =>\n    async ({ req }: any) => {\n      const cookie = req ? req.headers.cookie : '';\n      axios.defaults.headers.Cookie = '';\n      if (req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n      }\n\n      store.dispatch(loadMeRequest());\n      store.dispatch(END);\n      await store.sagaTask.toPromise();\n    },\n);\n\nexport default Signup;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/signup\",\n      function () {\n        return require(\"private-next-pages/signup.tsx\");\n      }\n    ]);\n  "],"names":["LoaderWrapper","styled","theme","color","DARK_GRAY","LoaderFull","LoaderContent","text","LoadingOutlined","subTitle","css","PageTitleWrapper","TextFront","MAIN","TextBack","LIGHT_GRAY","title1","title2","ButtonWrapper","FormBtn","Button","loading","buttonText","type","htmlType","SignUpFormWrapper","Form","ErrorMessage","InputWrapper","SignUpInput","Input","MIDDLE_GRAY","dispatch","useDispatch","useSelector","state","user","signUpLoading","signUpError","useInput","email","onChangeEmail","password","onChangePassword","nickname","onChangeNickname","useState","passwordCheck","setPasswordCheck","passwordError","setPasswordError","isValid","setIsValid","useEffect","alert","length","onChangePasswordCheck","useCallback","e","target","value","onSubmit","signupRequest","onFinish","MiniTitle","htmlFor","name","onChange","required","autoComplete","Conditional","condition","FormButton","FinishWrapper","handleLoginPage","Router","onClick","signUpFinish","Loader","Layout","window","__NEXT_P","push"],"sourceRoot":""}