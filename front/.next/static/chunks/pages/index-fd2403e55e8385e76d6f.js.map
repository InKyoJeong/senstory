{"version":3,"file":"static/chunks/pages/index-fd2403e55e8385e76d6f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/PictureFilled.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/PictureFilled.js","webpack://_N_E/./components/post/PostWriteForm/styles.ts","webpack://_N_E/./components/post/PostWriteForm/index.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/","webpack://_N_E/./node_modules/react-intersection-observer/react-intersection-observer.m.js"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","// This icon file is generated automatically.\nvar PictureFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 160H96c-17.7 0-32 14.3-32 32v640c0 17.7 14.3 32 32 32h832c17.7 0 32-14.3 32-32V192c0-17.7-14.3-32-32-32zM338 304c35.3 0 64 28.7 64 64s-28.7 64-64 64-64-28.7-64-64 28.7-64 64-64zm513.9 437.1a8.11 8.11 0 01-5.2 1.9H177.2c-4.4 0-8-3.6-8-8 0-1.9.7-3.7 1.9-5.2l170.3-202c2.8-3.4 7.9-3.8 11.3-1 .3.3.7.6 1 1l99.4 118 158.1-187.5c2.8-3.4 7.9-3.8 11.3-1 .3.3.7.6 1 1l229.6 271.6c2.6 3.3 2.2 8.4-1.2 11.2z\" } }] }, \"name\": \"picture\", \"theme\": \"filled\" };\nexport default PictureFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PictureFilledSvg from \"@ant-design/icons-svg/es/asn/PictureFilled\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PictureFilled = function PictureFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PictureFilledSvg\n  }));\n};\n\nPictureFilled.displayName = 'PictureFilled';\nexport default /*#__PURE__*/React.forwardRef(PictureFilled);","import styled from 'styled-components';\nimport { Form, Button, Input } from 'antd';\nimport { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const FormWrapper = styled(Form)`\n  background-color: ${({ theme }) => theme.color.DARK_GRAY};\n  margin-top: 20px;\n  margin-bottom: 40px;\n  padding: 10px;\n  border-radius: 10px;\n`;\n\nexport const PostWriteInput = styled(Input.TextArea)`\n  font-size: 16px;\n  margin-bottom: 8px;\n  background-color: ${({ theme }) => theme.color.LIGHT_GRAY};\n  border-color: ${({ theme }) => theme.color.LIGHT_GRAY};\n  color: white;\n  border-radius: 10px;\n`;\n\nexport const WriteButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const PostWriteButton = styled(Button)`\n  border-radius: 10px;\n  margin-left: 8px;\n  float: right;\n`;\n\nexport const ImageEnrollBtn = styled(Button)`\n  border-radius: 10px;\n  color: #9c4343;\n  background-color: #f5c1c1;\n  border-color: #f5d0d0;\n\n  &:hover,\n  &:focus {\n    background-color: #e89b9b;\n    color: #823030;\n    border-color: #f5b0b0;\n  }\n`;\n\nexport const ImagesWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: center;\n  overflow: auto;\n\n  & div:not(:last-child) {\n    margin-right: 20px;\n  }\n\n  & div {\n    position: relative;\n    display: inline-block;\n    margin-top: 8px;\n    & img {\n      width: 100px;\n      height: 100px;\n      border-radius: 10px;\n    }\n    @media screen and (max-width: 567px) {\n      & img {\n        width: 80px;\n        height: 80px;\n      }\n    }\n  }\n`;\n\nexport const ImageDeleteBtn = styled(CloseCircleOutlined)`\n  position: absolute;\n  top: -8px;\n  right: -8px;\n  font-size: 20px;\n  border-radius: 10px;\n  background-color: black;\n  color: #d66565;\n\n  &:hover {\n    color: #e03d3d;\n  }\n`;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EditFilled, PictureFilled } from '@ant-design/icons';\nimport useInput from '../../../hooks/useInput';\nimport {\n  FormWrapper,\n  ImageDeleteBtn,\n  ImageEnrollBtn,\n  ImagesWrapper,\n  PostWriteButton,\n  PostWriteInput,\n  WriteButtonWrapper,\n} from './styles';\nimport { addPostRequest } from '../../../reducers/post/addPost';\nimport { uploadImagesRequest } from '../../../reducers/post/uploadImages';\nimport { removeImageRequest } from '../../../reducers/post/removeImage';\nimport { RootState } from '../../../reducers';\n\nconst PostWriteForm = () => {\n  const dispatch = useDispatch();\n  const { imagePaths, addPostFinish, addPostLoading, addPostError } = useSelector((state: RootState) => state.post);\n  const [text, onChangeText, setText] = useInput('');\n\n  useEffect(() => {\n    if (addPostFinish) {\n      setText('');\n    }\n  }, [addPostFinish]);\n\n  useEffect(() => {\n    if (addPostError) {\n      alert(addPostError);\n    }\n  }, [addPostError]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('내용을 입력해주세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach((v) => {\n      formData.append('image', v);\n    });\n    formData.append('content', text);\n\n    return dispatch(addPostRequest(formData));\n  }, [text, imagePaths]);\n\n  const imageInput = useRef<HTMLInputElement>(null);\n\n  const onClickImageUpload = useCallback(() => {\n    if (!imageInput.current) {\n      return;\n    }\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onChangeImages = useCallback((e) => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append('image', f);\n    });\n\n    dispatch(uploadImagesRequest(imageFormData));\n  }, []);\n\n  const onRemoveImage = useCallback(\n    (index: number) => () => {\n      dispatch(removeImageRequest(index));\n    },\n    [],\n  );\n\n  return (\n    <FormWrapper encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <PostWriteInput value={text} onChange={onChangeText} maxLength={140} placeholder=\"내용을 입력하세요.\" />\n\n      <WriteButtonWrapper>\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n        <ImageEnrollBtn onClick={onClickImageUpload}>\n          <PictureFilled />\n        </ImageEnrollBtn>\n\n        <PostWriteButton type=\"primary\" htmlType=\"submit\" loading={addPostLoading}>\n          <EditFilled />\n        </PostWriteButton>\n      </WriteButtonWrapper>\n\n      <ImagesWrapper>\n        {imagePaths.map((v, i) => (\n          <div key={v}>\n            <img src={v.replace(/\\/thumb\\//, '/original/')} alt={v} />\n            <ImageDeleteBtn onClick={onRemoveImage(i)} />\n          </div>\n        ))}\n      </ImagesWrapper>\n    </FormWrapper>\n  );\n};\n\nexport default PostWriteForm;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useInView } from 'react-intersection-observer';\nimport wrapper from '../store/configureStore';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { loadAllPostRequest } from '../reducers/post/loadAllPost';\nimport { loadMeRequest } from '../reducers/user/loadMe';\nimport { randomUserRequest } from '../reducers/user/randomUser';\nimport { RootState } from '../reducers';\nimport { GetServerSideProps } from 'next';\n\nimport Conditional from '../hocs/Conditional';\nimport Layout from '../components/common/Layout';\nimport PostCard from '../components/post/PostCard';\nimport PostWriteForm from '../components/post/PostWriteForm';\n\nconst Home = () => {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state: RootState) => state.user);\n  const { mainPosts, hasMorePosts, loadAllPostLoading, repostError, loadAllPostError } = useSelector(\n    (state: RootState) => state.post,\n  );\n\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (repostError) {\n      alert(repostError);\n    }\n  }, [repostError]);\n\n  useEffect(() => {\n    if (loadAllPostError) {\n      alert(loadAllPostError);\n    }\n  }, [loadAllPostError]);\n\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadAllPostLoading) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch(loadAllPostRequest(lastId));\n    }\n  }, [inView, hasMorePosts, loadAllPostLoading, mainPosts]);\n\n  return (\n    <Layout main>\n      <Conditional condition={me}>\n        <PostWriteForm />\n      </Conditional>\n\n      {mainPosts.map((post) => (\n        <PostCard key={post.id} post={post} ref={hasMorePosts && !loadAllPostLoading ? ref : undefined} />\n      ))}\n    </Layout>\n  );\n};\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  (store): any =>\n    async ({ req }: any) => {\n      const cookie = req ? req.headers.cookie : '';\n      axios.defaults.headers.Cookie = '';\n      if (req && cookie) {\n        axios.defaults.headers.Cookie = cookie;\n      }\n      store.dispatch(loadMeRequest());\n      store.dispatch(loadAllPostRequest());\n      store.dispatch(randomUserRequest());\n      store.dispatch(END);\n      await store.sagaTask.toPromise();\n    },\n);\n\nexport default Home;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n  ","import { createElement, Component, useRef, useState, useCallback, useEffect } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar ObserverMap = new Map();\nvar RootIds = new WeakMap();\nvar rootId = 0;\n/**\r\n * Generate a unique ID for the root element\r\n * @param root\r\n */\n\nfunction getRootId(root) {\n  if (!root) return '0';\n  if (RootIds.has(root)) return RootIds.get(root);\n  rootId += 1;\n  RootIds.set(root, rootId.toString());\n  return RootIds.get(root);\n}\n/**\r\n * Convert the options to a string Id, based on the values.\r\n * Ensures we can reuse the same observer when observing elements with the same options.\r\n * @param options\r\n */\n\n\nfunction optionsToId(options) {\n  return Object.keys(options).sort().filter(function (key) {\n    return options[key] !== undefined;\n  }).map(function (key) {\n    return key + \"_\" + (key === 'root' ? getRootId(options.root) : options[key]);\n  }).toString();\n}\n\nfunction createObserver(options) {\n  // Create a unique ID for this observer instance, based on the root, root margin and threshold.\n  var id = optionsToId(options);\n  var instance = ObserverMap.get(id);\n\n  if (!instance) {\n    // Create a map of elements this observer is going to observe. Each element has a list of callbacks that should be triggered, once it comes into view.\n    var elements = new Map();\n    var thresholds;\n    var observer = new IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        var _elements$get;\n\n        // While it would be nice if you could just look at isIntersecting to determine if the component is inside the viewport, browsers can't agree on how to use it.\n        // -Firefox ignores `threshold` when considering `isIntersecting`, so it will never be false again if `threshold` is > 0\n        var inView = entry.isIntersecting && thresholds.some(function (threshold) {\n          return entry.intersectionRatio >= threshold;\n        }); // @ts-ignore support IntersectionObserver v2\n\n        if (options.trackVisibility && typeof entry.isVisible === 'undefined') {\n          // The browser doesn't support Intersection Observer v2, falling back to v1 behavior.\n          // @ts-ignore\n          entry.isVisible = inView;\n        }\n\n        (_elements$get = elements.get(entry.target)) == null ? void 0 : _elements$get.forEach(function (callback) {\n          callback(inView, entry);\n        });\n      });\n    }, options); // Ensure we have a valid thresholds array. If not, use the threshold from the options\n\n    thresholds = observer.thresholds || (Array.isArray(options.threshold) ? options.threshold : [options.threshold || 0]);\n    instance = {\n      id: id,\n      observer: observer,\n      elements: elements\n    };\n    ObserverMap.set(id, instance);\n  }\n\n  return instance;\n}\n/**\r\n * @param element - DOM Element to observe\r\n * @param callback - Callback function to trigger when intersection status changes\r\n * @param options - Intersection Observer options\r\n * @return Function - Cleanup function that should be triggered to unregister the observer\r\n */\n\n\nfunction observe(element, callback, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!element) return function () {}; // An observer with the same options can be reused, so lets use this fact\n\n  var _createObserver = createObserver(options),\n      id = _createObserver.id,\n      observer = _createObserver.observer,\n      elements = _createObserver.elements; // Register the callback listener for this element\n\n\n  var callbacks = elements.get(element) || [];\n\n  if (!elements.has(element)) {\n    elements.set(element, callbacks);\n  }\n\n  callbacks.push(callback);\n  observer.observe(element);\n  return function unobserve() {\n    // Remove the callback from the callback list\n    callbacks.splice(callbacks.indexOf(callback), 1);\n\n    if (callbacks.length === 0) {\n      // No more callback exists for element, so destroy it\n      elements[\"delete\"](element);\n      observer.unobserve(element);\n    }\n\n    if (elements.size === 0) {\n      // No more elements are being observer by this instance, so destroy it\n      observer.disconnect();\n      ObserverMap[\"delete\"](id);\n    }\n  };\n}\n\nfunction isPlainChildren(props) {\n  return typeof props.children !== 'function';\n}\n/**\r\n ## Render props\r\n\n To use the `<InView>` component, you pass it a function. It will be called\r\n whenever the state changes, with the new value of `inView`. In addition to the\r\n `inView` prop, children also receive a `ref` that should be set on the\r\n containing DOM element. This is the element that the IntersectionObserver will\r\n monitor.\r\n\n If you need it, you can also access the\r\n [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry)\r\n on `entry`, giving you access to all the details about the current intersection\r\n state.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView>\r\n {({ inView, ref, entry }) => (\r\n      <div ref={ref}>\r\n        <h2>{`Header inside viewport ${inView}.`}</h2>\r\n      </div>\r\n    )}\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n\n ## Plain children\r\n\n You can pass any element to the `<InView />`, and it will handle creating the\r\n wrapping DOM element. Add a handler to the `onChange` method, and control the\r\n state in your own component. Any extra props you add to `<InView>` will be\r\n passed to the HTML element, allowing you set the `className`, `style`, etc.\r\n\n ```jsx\r\n import { InView } from 'react-intersection-observer';\r\n\n const Component = () => (\r\n <InView as=\"div\" onChange={(inView, entry) => console.log('Inview:', inView)}>\r\n <h2>Plain children are always rendered. Use onChange to monitor state.</h2>\r\n </InView>\r\n );\r\n\n export default Component;\r\n ```\r\n */\n\n\nvar InView = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(InView, _React$Component);\n\n  function InView(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.node = null;\n    _this._unobserveCb = null;\n\n    _this.handleNode = function (node) {\n      if (_this.node) {\n        // Clear the old observer, before we start observing a new element\n        _this.unobserve();\n\n        if (!node && !_this.props.triggerOnce && !_this.props.skip) {\n          // Reset the state if we get a new node, and we aren't ignoring updates\n          _this.setState({\n            inView: !!_this.props.initialInView,\n            entry: undefined\n          });\n        }\n      }\n\n      _this.node = node ? node : null;\n\n      _this.observeNode();\n    };\n\n    _this.handleChange = function (inView, entry) {\n      if (inView && _this.props.triggerOnce) {\n        // If `triggerOnce` is true, we should stop observing the element.\n        _this.unobserve();\n      }\n\n      if (!isPlainChildren(_this.props)) {\n        // Store the current State, so we can pass it to the children in the next render update\n        // There's no reason to update the state for plain children, since it's not used in the rendering.\n        _this.setState({\n          inView: inView,\n          entry: entry\n        });\n      }\n\n      if (_this.props.onChange) {\n        // If the user is actively listening for onChange, always trigger it\n        _this.props.onChange(inView, entry);\n      }\n    };\n\n    _this.state = {\n      inView: !!props.initialInView,\n      entry: undefined\n    };\n    return _this;\n  }\n\n  var _proto = InView.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    // If a IntersectionObserver option changed, reinit the observer\n    if (prevProps.rootMargin !== this.props.rootMargin || prevProps.root !== this.props.root || prevProps.threshold !== this.props.threshold || prevProps.skip !== this.props.skip || prevProps.trackVisibility !== this.props.trackVisibility || prevProps.delay !== this.props.delay) {\n      this.unobserve();\n      this.observeNode();\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unobserve();\n    this.node = null;\n  };\n\n  _proto.observeNode = function observeNode() {\n    if (!this.node || this.props.skip) return;\n    var _this$props = this.props,\n        threshold = _this$props.threshold,\n        root = _this$props.root,\n        rootMargin = _this$props.rootMargin,\n        trackVisibility = _this$props.trackVisibility,\n        delay = _this$props.delay;\n    this._unobserveCb = observe(this.node, this.handleChange, {\n      threshold: threshold,\n      root: root,\n      rootMargin: rootMargin,\n      // @ts-ignore\n      trackVisibility: trackVisibility,\n      // @ts-ignore\n      delay: delay\n    });\n  };\n\n  _proto.unobserve = function unobserve() {\n    if (this._unobserveCb) {\n      this._unobserveCb();\n\n      this._unobserveCb = null;\n    }\n  };\n\n  _proto.render = function render() {\n    if (!isPlainChildren(this.props)) {\n      var _this$state = this.state,\n          inView = _this$state.inView,\n          entry = _this$state.entry;\n      return this.props.children({\n        inView: inView,\n        entry: entry,\n        ref: this.handleNode\n      });\n    }\n\n    var _this$props2 = this.props,\n        children = _this$props2.children,\n        as = _this$props2.as,\n        tag = _this$props2.tag,\n        props = _objectWithoutPropertiesLoose(_this$props2, [\"children\", \"as\", \"tag\", \"triggerOnce\", \"threshold\", \"root\", \"rootMargin\", \"onChange\", \"skip\", \"trackVisibility\", \"delay\", \"initialInView\"]);\n\n    return /*#__PURE__*/createElement(as || tag || 'div', _extends({\n      ref: this.handleNode\n    }, props), children);\n  };\n\n  return InView;\n}(Component);\nInView.displayName = 'InView';\nInView.defaultProps = {\n  threshold: 0,\n  triggerOnce: false,\n  initialInView: false\n};\n\n/**\r\n * React Hooks make it easy to monitor the `inView` state of your components. Call\r\n * the `useInView` hook with the (optional) [options](#options) you need. It will\r\n * return an array containing a `ref`, the `inView` status and the current\r\n * [`entry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry).\r\n * Assign the `ref` to the DOM element you want to monitor, and the hook will\r\n * report the status.\r\n *\r\n * @example\r\n * ```jsx\r\n * import React from 'react';\r\n * import { useInView } from 'react-intersection-observer';\r\n *\r\n * const Component = () => {\r\n *   const { ref, inView, entry } = useInView({\r\n *       threshold: 0,\r\n *   });\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <h2>{`Header inside viewport ${inView}.`}</h2>\r\n *     </div>\r\n *   );\r\n * };\r\n * ```\r\n */\n\nfunction useInView(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      threshold = _ref.threshold,\n      delay = _ref.delay,\n      trackVisibility = _ref.trackVisibility,\n      rootMargin = _ref.rootMargin,\n      root = _ref.root,\n      triggerOnce = _ref.triggerOnce,\n      skip = _ref.skip,\n      initialInView = _ref.initialInView;\n\n  var unobserve = useRef();\n\n  var _React$useState = useState({\n    inView: !!initialInView\n  }),\n      state = _React$useState[0],\n      setState = _React$useState[1];\n\n  var setRef = useCallback(function (node) {\n    if (unobserve.current !== undefined) {\n      unobserve.current();\n      unobserve.current = undefined;\n    } // Skip creating the observer\n\n\n    if (skip) return;\n\n    if (node) {\n      unobserve.current = observe(node, function (inView, entry) {\n        setState({\n          inView: inView,\n          entry: entry\n        });\n\n        if (entry.isIntersecting && triggerOnce && unobserve.current) {\n          // If it should only trigger once, unobserve the element after it's inView\n          unobserve.current();\n          unobserve.current = undefined;\n        }\n      }, {\n        root: root,\n        rootMargin: rootMargin,\n        threshold: threshold,\n        // @ts-ignore\n        trackVisibility: trackVisibility,\n        // @ts-ignore\n        delay: delay\n      });\n    }\n  }, // We break the rule here, because we aren't including the actual `threshold` variable\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [// If the threshold is an array, convert it to a string so it won't change between renders.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  Array.isArray(threshold) ? threshold.toString() : threshold, root, rootMargin, triggerOnce, skip, trackVisibility, delay]);\n  /* eslint-disable-next-line */\n\n  useEffect(function () {\n    if (!unobserve.current && state.entry && !triggerOnce && !skip) {\n      // If we don't have a ref, then reset the state (unless the hook is set to only `triggerOnce` or `skip`)\n      // This ensures we correctly reflect the current state - If you aren't observing anything, then nothing is inView\n      setState({\n        inView: !!initialInView\n      });\n    }\n  });\n  var result = [setRef, state.inView, state.entry]; // Support object destructuring, by adding the specific values.\n\n  result.ref = result[0];\n  result.inView = result[1];\n  result.entry = result[2];\n  return result;\n}\n\nexport default InView;\nexport { InView, observe, useInView };\n//# sourceMappingURL=react-intersection-observer.m.js.map\n"],"names":["props","ref","AntdIcon","icon","displayName","FormWrapper","styled","Form","theme","color","DARK_GRAY","PostWriteInput","Input","LIGHT_GRAY","WriteButtonWrapper","PostWriteButton","Button","ImageEnrollBtn","ImagesWrapper","ImageDeleteBtn","CloseCircleOutlined","dispatch","useDispatch","useSelector","state","post","imagePaths","addPostFinish","addPostLoading","addPostError","useInput","text","onChangeText","setText","useEffect","alert","onSubmit","useCallback","trim","formData","FormData","forEach","v","append","addPostRequest","imageInput","useRef","onClickImageUpload","current","click","onChangeImages","e","imageFormData","call","target","files","f","uploadImagesRequest","onRemoveImage","index","removeImageRequest","encType","onFinish","value","onChange","maxLength","placeholder","type","name","multiple","hidden","onClick","htmlType","loading","EditFilled","map","i","src","replace","alt","me","user","mainPosts","hasMorePosts","loadAllPostLoading","repostError","loadAllPostError","useInView","inView","lastId","length","id","loadAllPostRequest","Layout","main","Conditional","condition","PostCard","undefined","window","__NEXT_P","push","_extends","Object","assign","arguments","source","key","prototype","hasOwnProperty","apply","this","ObserverMap","Map","RootIds","WeakMap","rootId","optionsToId","options","keys","sort","filter","root","has","set","toString","get","observe","element","callback","_createObserver","instance","thresholds","elements","observer","IntersectionObserver","entries","entry","_elements$get","isIntersecting","some","threshold","intersectionRatio","trackVisibility","isVisible","Array","isArray","createObserver","callbacks","splice","indexOf","unobserve","size","disconnect","isPlainChildren","children","InView","_React$Component","subClass","superClass","_this","node","_unobserveCb","handleNode","triggerOnce","skip","setState","initialInView","observeNode","handleChange","create","constructor","__proto__","_proto","componentDidUpdate","prevProps","rootMargin","delay","componentWillUnmount","_this$props","render","_this$state","_this$props2","as","tag","excluded","sourceKeys","_objectWithoutPropertiesLoose","createElement","Component","_temp","_ref","_React$useState","useState","setRef","result","defaultProps"],"sourceRoot":""}